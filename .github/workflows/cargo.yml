# This is a basic workflow to help you get started with Actions

name: Release and deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          components: rustfmt, clippy
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target x86_64-unknown-linux-gnu
      - uses: actions/upload-artifact@v2
        with:
          name: binary_artifact
          path: |
            target/x86_64-unknown-linux-gnu/release/discord_bot_client
            target/x86_64-unknown-linux-gnu/release/homeserver_receive_process
            target/x86_64-unknown-linux-gnu/release/valheim-connection-check

  deploy:
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: binary_artifact
          path: release_file/
      - name: make release package
        run: |
          ls
