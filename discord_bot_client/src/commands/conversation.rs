mod embed;

use std::time::Duration;

use log::*;
use rand::{prelude::*, rngs::StdRng, thread_rng, SeedableRng};
use serenity::{builder::CreateEmbed, model::prelude::Message, prelude::Context};
use tokio::time;

use crate::SONNEKI_INTERVAL_MS;

use self::embed::*;

pub async fn conversation(ctx: &Context, msg: &Message) {
    let content = msg.content.clone();

    // conversation
    if content.ends_with('Ëçâ')
        || {
            let len = content.chars().count();
            let mut www = content.to_string();
            www.retain(|f| f == 'w' || f == 'ÔΩó');
            let www_len = www.chars().count();

            www_len as f32 / len as f32 > 0.5
        }
        || content.ends_with("www")
    {
        let mut rng = StdRng::from_rng(thread_rng()).unwrap();
        let kusa_embed = KUSA.choose(&mut rng).unwrap();

        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(kusa_embed()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content == "„É®„Ç∑ÔºÅ„Åß„Åô„ÅÆ" || content == "„É®„Ç∑„Åß„Åô„ÅÆ" {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(jasin_yosi()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    } else if content.contains("„É®„Ç∑„É®„Ç∑„É®„Ç∑") || content.contains("„É®„Ç∑ÔºÅ„É®„Ç∑ÔºÅ„É®„Ç∑ÔºÅ")
    {
        if let Err(why) = msg
            .channel_id
            // .send_message(&ctx.http, |m| m.set_embed(yosiyosiyosi()))
            .send_message(&ctx.http, |m| m.set_embed(yosi_three()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    } else if (content.contains("„É®„Ç∑") || content.contains("ÔæñÔΩº"))
        && (content.contains('ÔºÅ') || content.contains('!'))
    {
        let mut rng = StdRng::from_rng(thread_rng()).unwrap();

        let yosi_embeds_added_probability = {
            let prob = vec![0.5, 0.2, 0.3];
            prob.into_iter()
                .zip(YOSI_EMBEDS)
                .collect::<Vec<(f64, fn() -> CreateEmbed)>>()
        };
        let embed = yosi_embeds_added_probability
            .choose_weighted(&mut rng, |item| item.0)
            .unwrap()
            .1;

        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(embed()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.starts_with('?') || content.starts_with('Ôºü') || content.starts_with("„ÅØÔºü") {
        let mut rng = StdRng::from_rng(thread_rng()).unwrap();

        let yosi_embeds_added_probability = {
            let prob = vec![0.1, 0.9];
            prob.into_iter()
                .zip(WHAT_EMBEDS)
                .collect::<Vec<(f64, fn() -> CreateEmbed)>>()
        };
        let embed = yosi_embeds_added_probability
            .choose_weighted(&mut rng, |item| item.0)
            .unwrap()
            .1;

        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(embed()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Å©„ÅÜ„Åó„Å¶") {
        let mut rng = StdRng::from_rng(thread_rng()).unwrap();

        let yosi_embeds_added_probability = {
            let prob = vec![0.3, 0.7];
            prob.into_iter()
                .zip(DOUSITE_EMBEDS)
                .collect::<Vec<(f64, fn() -> CreateEmbed)>>()
        };
        let embed = yosi_embeds_added_probability
            .choose_weighted(&mut rng, |item| item.0)
            .unwrap()
            .1;

        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(embed()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    // Ai chan reply
    if content.eq("„ÅÇ„ÅÑ„Å°„ÇÉ„Çì")
        || content.eq("Ai„Å°„ÇÉ„Çì")
        || content.contains("„ÅÇ„ÅÑ„Å°„ÇÉ„Çì„ÅåÈùô„Åã„Åß„É®„Ç∑")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(ai_chan()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Åä„Å§„Åã„Çå") || content.contains("„ÅäÁñ≤„Çå") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(otu()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains('ÈÖí') {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(sake()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.starts_with("„ÅÇ„Å£") || content.starts_with("„ÇÑ„Åπ") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(nannnoimiga()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Éè„É†„ÅÜ„ÇÅ„Åá") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(hamu()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content == "(‚òù\u{fe0f} ’û‡®ä ’û)‚òù\u{fe0f}" || content == "(‚òù ’û‡®ä ’û)‚òù" {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(ikare_one()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("(‚òù\u{fe0f} ’û‡®ä ’û)‚òù\u{fe0f}") || content.contains("(‚òù ’û‡®ä ’û)‚òù(‚òù ’û‡®ä ’û)‚òù")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.content(&content).set_embed(ikare()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Åù„ÅÜ„ÅØ„Å™„Çâ„Çì„ÇÑ„Çç") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(souhayarann()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Å¶„Çì„Åò„Çá„ÅÜ") {
        let mut rng = StdRng::from_rng(thread_rng()).unwrap();

        let tenjyo_embeds_added_probability = {
            let prob = vec![0.8, 0.2];
            prob.into_iter()
                .zip(TENJYO_EMBEDS)
                .collect::<Vec<(f64, fn() -> CreateEmbed)>>()
        };
        let embed = tenjyo_embeds_added_probability
            .choose_weighted(&mut rng, |item| item.0)
            .unwrap()
            .1;

        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(embed()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Åµ„Åê") || content.contains("„Éï„Ç∞") || content.contains('üê°') {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(hugu()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Åà„ÅÑ„ÄÅ„Åà„ÅÑ") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(mun()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Åü„Å†„ÅÑ„Åæ") || content.contains("Â∏∞„Å£„Åü") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(tearai()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Å±„Åè„Å±„Åè") || content.contains("„Éë„ÇØ„Éë„ÇØ") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(pakupaku()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.ends_with("‰ªäÊó•„ÇÇ‰∏ÄÊó•") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(today_ganba()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.ends_with('üò≠') {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.content(":sob:"))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.ends_with("„ÉªÔΩñ„Éª") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(konata()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("( À∂ÀÜ·¥óÀÜÀ∂ )") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(teio_tuntun()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Ç≥„Çµ„ÉÉ„ÇØ„ÉÄ„É≥„Çπ")
        || content.contains("„Åì„Åï„Å£„Åè„Å†„Çì„Åô")
        || content.contains("„Éõ„Éë„Éº„ÇØ")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(hopak()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„ÇÑ„Å†")
        || content.contains("„ÅÑ„ÇÑ„Å†")
        || content.contains('Â´å')
        || content.contains("„Ç§„É§")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(yada()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("Ê≥¢Âãï") || content.contains("„ÅØ„Å©„ÅÜ") || content.contains("ÊòáÈæçÊã≥")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(hadou()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Å¥„Åü") || content.contains("„Éî„Çø") || content.contains("„Éí„Éü„ÉÑ") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(pita()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„ÅÇ„Åë„Åä„ÇÅ")
        || content.contains("„ÅÇ„Åë„Åæ„Åó„Å¶„Åä„ÇÅ„Åß„Å®„ÅÜ")
        || content.contains("Êòé„Åë„Åæ„Åó„Å¶„Åä„ÇÅ„Åß„Å®„ÅÜ")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(akeome()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains('È§Ö')
        || content.contains("„ÇÇ„Å°„Åß„Åô„Çè")
        || content.contains("„ÇÇ„Å°„ÅÜ„ÇÅ„Åá")
        || content.contains("„Åä„Åó„Çã„Åì")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(motidesuwa()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains('Êêç') || content.contains("„Åè„Åù„Å£„Åü„Çå") || content.contains("„Éá„Éá„Éº„É≥")
    {
        sonnekineko(ctx, msg).await;
    }

    if content.contains("„Éë„Ç°„É≥") || content.contains("„Å±„ÅÅ„Çì") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(paxan()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„ÉÅ„É®") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(chiyopanchi()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Å™„ÇÅ„Çã") || content.contains("„Å™„ÇÅ„Å¶„Çã") || content.contains("Ëàê„ÇÅ")
    {
        namebetu(ctx, msg).await;
    }

    if content.contains("Hello Tenjyo")
        || content.contains("Hello tenjyo")
        || content.contains("Hello tenjo")
        || content.contains("hello tenjyo")
        || content.contains("„ÅØ„Çç„Éº„Å¶„Çì„Åò„Çá„ÅÜ")
        || content.contains("„Éè„É≠„Éº")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(hello_tenjyo()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("ÂçíË´ñ„Åä„Çè„Çâ") || content.contains("ÂçíË´ñÁµÇ„Çè„Çâ") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(thesis_donot_end()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Åù„ÅÆ„Å®„Åä„Çä") || content.contains("„Åù„ÅÆÈÄö„Çä") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(exactly()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Éï„Ç°„Ç§„Éà") || content.contains("„Åµ„ÅÅ„ÅÑ„Å®") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(tiyono_o_()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains('‰Ωï') && (content.contains('?') || content.contains('Ôºü')) {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(what_buru()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("ÂçíË´ñ") && (content.contains("ÁµÇ„Çè„Å£„Åü") || content.contains("„Åä„Çè„Å£„Åü"))
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(soturon_owata()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("‰ø∫„ÅÆÂãù„Å°") || content.contains("„Åä„Çå„ÅÆ„Åã„Å°") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(imwin()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„ÅÇ„Å∂„Å™")
        || content.contains("Âç±„Å™")
        || content.contains("ÂÆâÂÖ®")
        || content.contains("„ÅÇ„Çì„Åú„Çì")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(safety()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if (content.contains("„É¢„É≥„Éè„É≥") || content.contains("„ÇÇ„Çì„ÅØ„Çì")) && content.contains("„ÇÑ„Çç")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(monhanneko()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("(o„Éª‚àá„Éªo)")
        || content.contains("ÁµÇ„Çè„Çä")
        || content.contains("„Åä„Çè„Çä")
        || content.contains("„ÇÇ„Å°„Çá„Å†„Çà")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(motyo()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("ÔΩºÔæÉ‚Ä¶ÔΩ∫ÔæõÔΩºÔæÉ‚Ä¶‚Ä¶")
        || content.contains("„Ç≥„É≠„Ç∑„ÉÜ")
        || content.contains("‰æÆËæ±")
        || content == "„É®„Ç∑"
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(yosi_inoti()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("Ê•Ω„Åó„ÅÑ") || content.contains("„ÉØ„ÇØ„ÉØ„ÇØ") || content.contains("„Çè„Åè„Çè„Åè")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(wakuwaku()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Åä„ÅØ„Çà„ÅÜ") || content.contains("„Åä„ÅØ„ÇÑ„ÅÑ„Åæ„Åô") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(hello_anya()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Å†„ÅÑ„Åò„Çá„Å∂")
        || content.contains("„Å†„ÅÑ„Åò„Çá„ÅÜ„Å∂")
        || content.contains("Â§ß‰∏àÂ§´")
        || content.contains("„Åå„Çì„Å∞")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(fight_anya()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains('Á¨ë') || content.contains("ÔæåÔΩØ") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(wara_anya()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„ÅÜ„Çã„Åõ„Åá")
        || content.contains("„ÅÜ„Çã„Åõ„Åà")
        || content.contains("„Éë„É≥„ÉÅ")
        || content.contains("„Éñ„ÉÅÂàá„Çå")
        || content.contains("Ê≠ª„Å¨")
        || content.contains("Ê≠ª„Å≠")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(punch_anya()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("Ê≠¢„Åæ„Çã") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(dontstop()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Çè„Åã„Çâ„Å™„ÅÑ")
        || content.contains("„Çè„Åã„Çì„Å™„ÅÑ")
        || content.contains("„Çè„Åã„Çâ„Çì")
        || content.contains("„Çè„Åã„Çì„Å≠")
        || content.contains("ÂàÜ„Åã„Çâ„Å™„ÅÑ")
        || content.contains("ÂàÜ„Åã„Çì„Å™„ÅÑ")
        || content.contains("ÂàÜ„Åã„Çâ„Çì")
        || content.contains("ÂàÜ„Åã„Çì„Å≠")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(wakannnaippi()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Åã„Åè„Åõ„Çì„Åù„ÅÜ") || content.contains('Ê†∏') || content.contains("Êà¶‰∫â")
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(kakusensou()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if (content.contains("‰∏ñÁïå") && content.contains("„Åõ„Åã„ÅÑ"))
        || (content.contains("ÁµÇ„Çè") && content.contains("„Åä„Çè"))
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(world_end()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("Ë≤∑„Å£„Å°„Å£„Åü") || content.contains("„Åã„Å£„Å°„Å£„Åü") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(buy_kyan()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("Âãù„Å£") || content.contains("Âãù„Å§") || content.contains("Ë≤†„Åë") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(lose_syamiko()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("ÁÑºËÇâ") || content.contains("„Éê„Ç°„Ç°„Éº„É≥") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(meat_syamiko()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("„Åï„Åã„Å™")
        || content.contains('È≠ö')
        || content.contains('üêü')
        || content.contains('üé£')
        || content.contains('üê†')
    {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(fish_takina()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }

    if content.contains("ÁôæË£Ç„É®„Ç∑") {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(yosiyosiyosi()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }
    }
}

async fn sonnekineko(ctx: &Context, msg: &Message) {
    for embed in &SONNEKINEKO_EMBEDS {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(embed()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }

        time::sleep(Duration::from_millis(SONNEKI_INTERVAL_MS)).await;
    }
}

async fn namebetu(ctx: &Context, msg: &Message) {
    for embed in &NAMEURARA_EMBEDS {
        if let Err(why) = msg
            .channel_id
            .send_message(&ctx.http, |m| m.set_embed(embed()))
            .await
        {
            error!("Error sending message: {:?}", why);
        }

        time::sleep(Duration::from_millis(SONNEKI_INTERVAL_MS)).await;
    }
}
